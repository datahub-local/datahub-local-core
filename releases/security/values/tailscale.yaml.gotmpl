#
# IMPORTANT NOTE
#
# This chart inherits from our common library chart. You can check the default values/options here:
# https://github.com/bjw-s/helm-charts/blob/main/charts/library/common/values.yaml
#
# See also https://tailscale.com/learn/managing-access-to-kubernetes-with-tailscale#subnet-router-deployments

defaultPodOptions:
  securityContext:
    # Run as a non-root user to mitigate privilege escalation attack attempts
    runAsUser: 1000
    runAsGroup: 1000

controllers:
  main:
    strategy: RollingUpdate
    annotations:
      reloader.stakater.com/auto: "true"
    containers:
      main:
        image:
          repository: ghcr.io/tailscale/tailscale
          tag: '{{ range $key,$value := .StateValues.container_image_version }}{{ if (eq $key "ghcr.io/tailscale/tailscale") }}{{ $value }}{{ end }}{{ end }}'
        args:
          - --snat-subnet-routes=false
        env:
          - name: TS_KUBE_SECRET
            value: tailscale-auth-current
          - name: TS_AUTHKEY
            valueFrom:
              secretKeyRef:
                name: tailscale-auth
                key: auth-key
          - name: TS_ROUTES
            # <POD_IP_RANGE>,<SERVICE_IP_RANGE>,<LOCAL_NETWORK>
            # <POD_IP_RANGE>: kubectl get nodes -o jsonpath='{.items[*].spec.podCIDR}' # -> get subnet that match all subnets
            # <SERVICE_IP_RANGE>: kubectl create service clusterip testcidr --tcp='8080:8080' --clusterip='1.0.0.0' 2>&1 | sed 's/.*valid IPs is //'
            value: "10.42.0.0/16,10.43.0.0/16,192.168.31.0/24"
          - name: TS_USERSPACE
            value: "true"
        resources:
          requests:
            memory: 100Mi
            cpu: 100m

serviceAccount:
  create: true

rawResources:
  role:
    enabled: true

    apiVersion: rbac.authorization.k8s.io/v1
    kind: Role

    spec:
      rules:
        - apiGroups: [""]
          resources: ["secrets"]
          verbs: ["create"]
        - apiGroups: [""]
          resourceNames: ["tailscale-auth-current"]
          resources: ["secrets"]
          verbs: ["get", "update", "patch"]
  role-binding:
    enabled: true

    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding

    spec:
      subjects:
        - kind: ServiceAccount
          name: "{{ $.Values.release_name }}-tailscale"
      roleRef:
        kind: Role
        name: "{{ $.Values.release_name }}-tailscale-role"
        apiGroup: rbac.authorization.k8s.io
