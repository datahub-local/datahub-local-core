imagePullSecrets: []

server:
  workers: 1

  autoscaling:
    enabled: true
    maxReplicas: 3
    targetCPUUtilizationPercentage: 75

  log:
    trino:
      level: INFO

  coordinatorExtraConfig: |
    web-ui.enabled=true
    web-ui.authentication.type=FIXED
    web-ui.user=admin
    http-server.process-forwarded=IGNORE

additionalConfigProperties:
  - "internal-communication.shared-secret={{ .StateValues.security_github_client_id }}"

coordinator:
  jvm:
    maxHeapSize: "4G"

worker:
  jvm:
    maxHeapSize: "4G"

serviceAccount:
  create: true

rules:
  rules.json: |-
    {
      "catalogs": [
        {
          "user": "{{ .StateValues.trino_user }}",
          "catalog": ".*",
          "allow": "all"
        },
      "schemas": [
        {
          "user": "{{ .StateValues.trino_user }}",
          "schema": ".*",
          "owner": true
        }
      ]
    }

env:
  - name: "S3_AWS_ACCESS_KEY"
    value: "{{ .StateValues.minio_user }}"
  - name: "S3_AWS_SECRET_KEY"
    valueFrom:
      secretKeyRef:
        name: minio-admin-credentials
        key: accessKey

additionalCatalogs:
  memory: |
    connector.name=memory
    memory.max-data-per-node=128MB
  iceberg: |
    connector.name=iceberg
    iceberg.catalog.type=nessie
    iceberg.nessie-catalog.uri=http://{{ $.Values.release_name }}-data-nessie:19120/api/v1
    iceberg.nessie-catalog.ref=main
    iceberg.nessie-catalog.default-warehouse-dir=s3://datahub-local-gold

    fs.native-s3.enabled=true
    s3.aws-access-key=${ENV:S3_AWS_ACCESS_KEY}
    s3.aws-secret-key=${ENV:S3_AWS_SECRET_KEY}
    s3.endpoint=https://data-minio.{{ .StateValues.ingress_hostname }}
    s3.region=eu-central-1
    s3.path-style-access=true

ingress:
  enabled: true
  className: "nginx"
  hosts:
    - host: "data-trino.{{ .StateValues.ingress_hostname }}"
      paths:
        - path: /
          pathType: Prefix
  annotations:
    #{{- if .Values.security_enabled }}{{ .Values.security_oauth2_annotations | toYaml | nindent 4 }}{{ end }}

    gethomepage.dev/enabled: "true"
    gethomepage.dev/name: "Trino"
    gethomepage.dev/href: "https://data-trino.{{ .StateValues.ingress_hostname }}/ui/"
    gethomepage.dev/pod-selector: "app.kubernetes.io/name=trino"
    gethomepage.dev/description: "Fast distributed SQL query engine for big data analytics."
    gethomepage.dev/group: "Data"
    gethomepage.dev/icon: "https://trino.io/docs/current/_static/trino.svg"
