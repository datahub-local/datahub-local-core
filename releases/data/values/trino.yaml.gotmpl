image:
  tag: "449"

server:
  workers: 1

  autoscaling:
    enabled: true
    maxReplicas: 3
    targetCPUUtilizationPercentage: 75

  config:
    authenticationType: "PASSWORD"

  workerExtraConfig: |
    internal-communication.shared-secret={{ index .StateValues "security_github_client_id" }}

  coordinatorExtraConfig: |
    internal-communication.shared-secret={{ index .StateValues "security_github_client_id" }}
    http-server.process-forwarded=true

    web-ui.enabled=true
    web-ui.authentication.type=FIXED
    #web-ui.shared-secret={{ index .StateValues "security_github_client_id" }}
    web-ui.user=admin

additionalConfigProperties:
coordinator:
  jvm:
    maxHeapSize: "4G"

  additionalJVMConfig:
    - "# https://bugs.openjdk.org/browse/JDK-8329528"
    - "-XX:+UnlockDiagnosticVMOptions"
    - "-XX:G1NumCollectionsKeepPinned=10000000"

worker:
  jvm:
    maxHeapSize: "4G"

  additionalJVMConfig:
    - "# https://bugs.openjdk.org/browse/JDK-8329528"
    - "-XX:+UnlockDiagnosticVMOptions"
    - "-XX:G1NumCollectionsKeepPinned=10000000"

serviceAccount:
  create: true

auth:
  passwordAuthSecret: "trino-admin-credentials"

rules:
  rules.json: |-
    {
      "catalogs": [
        {
          "user": "admin",
          "catalog": ".*",
          "allow": "all"
        },
      "schemas": [
        {
          "user": "admin",
          "schema": ".*",
          "owner": true
        }
      ]
    }

env:
  - name: "S3_AWS_ACCESS_KEY"
    value: "admin"
  - name: "S3_AWS_SECRET_KEY"
    valueFrom:
      secretKeyRef:
        name: minio-admin-credentials
        key: accessKey

additionalCatalogs:
  memory: |
    connector.name=memory
    memory.max-data-per-node=128MB
  # iceberg: |
  #   connector.name=iceberg
  #   iceberg.catalog.type=nessiehive.s3.endpoint=http://my-minio:9000
  #   fs.native-s3.enabled=true
  #   s3.endpoint=datahub-local-core-data-minio:9000
  #   s3.aws-access-key=${ENV:S3_AWS_ACCESS_KEY}
  #   s3.aws-secret-key=${ENV:S3_AWS_SECRET_KEY}
  #   memory.max-data-per-node=128MB

ingress:
  enabled: true
  className: "traefik"
  hosts:
    - host: "data-trino.{{ .StateValues.ingress_hostname }}"
      paths:
        - path: /
          pathType: Prefix
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.middlewares: "{{ if .Values.security_enabled }}security-security-oauth2@kubernetescrd{{ end }}"

    gethomepage.dev/enabled: "true"
    gethomepage.dev/name: "Trino"
    gethomepage.dev/href: "https://data-trino.{{ .StateValues.ingress_hostname }}/ui/"
    gethomepage.dev/pod-selector: "app=trino"
    gethomepage.dev/description: "Fast distributed SQL query engine for big data analytics."
    gethomepage.dev/group: "Data"
    gethomepage.dev/icon: "si-trino"
