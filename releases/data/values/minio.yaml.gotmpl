mode: distributed

replicas: 4

ignoreChartChecksums: true

resources:
  requests:
    memory: 256Mi

persistence:
  enabled: true

  size: 8Gi
  storageClass: longhorn-no-replica

metrics:
  serviceMonitor:
    enabled: true
    includeNode: true

    interval: 30s

consoleIngress:
  enabled: true
  ingressClassName: "nginx"
  path: /
  hosts:
    - "data-minio.{{ .StateValues.ingress_hostname }}"
  annotations:
    gethomepage.dev/enabled: "true"
    gethomepage.dev/name: "Minio"
    gethomepage.dev/href: "https://data-minio.{{ .StateValues.ingress_hostname }}/login"
    gethomepage.dev/pod-selector: "app=minio"
    gethomepage.dev/description: "The Object Store for AI Data Infrastructure."
    gethomepage.dev/group: "Data"
    gethomepage.dev/icon: "minio.svg"

environment:
  MINIO_BROWSER_REDIRECT_URL: "https://data-minio.{{ .StateValues.ingress_hostname }}/"
  MINIO_PROMETHEUS_URL: "http://{{ $.Values.release_name }}-kube-pr-prometheus.monitoring.svc.cluster.local:9090"
  MINIO_IDENTITY_OPENID_ROLE_POLICY: consoleAdmin

#{{- if .Values.security_enabled }}
oidc:
  enabled: true
  configUrl: "https://security-dex.{{ .StateValues.ingress_hostname }}/dex/.well-known/openid-configuration"
  clientId: "minio"
  clientSecret: "{{ .StateValues.security_github_client_secret }}"
  scopes: "openid,profile,email"
  redirectUri: "https://data-minio.{{ .StateValues.ingress_hostname }}/oauth_callback"
  displayName: "Github"
#{{- end }}

existingSecret: "minio-root-credentials"

users:
  - accessKey: admin
    existingSecret: minio-admin-credentials
    existingSecretKey: accessKey
    policy: consoleAdmin

buckets:
  #{{- range $bucket := .StateValues.minio_buckets }}
  - name: "{{ $bucket.name }}"
    policy: {{$bucket | get "policy" "none"}}
    purge: {{$bucket | get "purge" false}}
    objectlocking: {{$bucket | get "objectlocking" false}}
  #{{- end }}
