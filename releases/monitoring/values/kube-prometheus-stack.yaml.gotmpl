# Values for kube-prometheus-stack chart. See https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml

prometheusOperator:
  admissionWebhooks:
    enabled: false

  tls:
    enabled: false

alertmanager:
  ingress:
    enabled: true
    ingressClassName: "traefik"
    hosts:
      - "monitoring-alertmanager.{{ .StateValues.ingress_hostname }}"
    paths:
      - /
    secureBackends: true
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      traefik.ingress.kubernetes.io/router.middlewares: "{{ if .Values.security_enabled }}security-security-oauth2@kubernetescrd{{ end }}"

      gethomepage.dev/enabled: "true"
      gethomepage.dev/name: "Alertmanager"
      gethomepage.dev/pod-selector: "app.kubernetes.io/name=alertmanager"
      gethomepage.dev/description: "Handle alerts sent by client applications such as the Prometheus server."
      gethomepage.dev/group: "Monitoring"
      gethomepage.dev/icon: "alertmanager.png"

grafana:
  assertNoLeakedSecrets: false
  persistence:
    enabled: true
  grafana.ini:
    server:
      domain: "monitoring-grafana.{{ .StateValues.ingress_hostname }}"
      root_url: "https://monitoring-grafana.{{ .StateValues.ingress_hostname }}:{{ .StateValues.ingress_port }}"
      serve_from_sub_path: true
    #{{- if .Values.security_enabled }}
    auth.github:
      enabled: true
      allow_sign_up: true
      allowed_organizations: "{{ .StateValues.security_github_organization }}"
      auto_login: true
      client_id: "{{ .StateValues.security_github_client_id }}"
      client_secret: "{{ .StateValues.security_github_client_secret }}"
    users:
      auto_assign_org_role: Admin
    #{{- else }}
    auth:
      disable_login_form: true
      disable_signout_menu: true
    auth.anonymous:
      enabled: true
      org_role: Admin
    auth.basic:
      enabled: false
    #{{- end }}
  ingress:
    enabled: true
    ingressClassName: "traefik"
    hosts:
      - "monitoring-grafana.{{ .StateValues.ingress_hostname }}"
    path: /
    secureBackends: true
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: websecure

      gethomepage.dev/enabled: "true"
      gethomepage.dev/name: "Grafana"
      gethomepage.dev/pod-selector: "app.kubernetes.io/name=grafana"
      gethomepage.dev/description: "The open and composable observability and data visualization platform."
      gethomepage.dev/group: "Monitoring"
      gethomepage.dev/icon: "grafana.png"

prometheus:
  ingress:
    enabled: true
    ingressClassName: "traefik"
    hosts:
      - "monitoring-prometheus.{{ .StateValues.ingress_hostname }}"
    paths:
      - /
    secureBackends: true
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      traefik.ingress.kubernetes.io/router.middlewares: "{{ if .Values.security_enabled }}security-security-oauth2@kubernetescrd{{ end }}"

      gethomepage.dev/enabled: "true"
      gethomepage.dev/name: "Prometheus"
      gethomepage.dev/pod-selector: "app.kubernetes.io/name=prometheus"
      gethomepage.dev/description: "Monitoring system and time series database."
      gethomepage.dev/group: "Monitoring"
      gethomepage.dev/icon: "prometheus.png"
  prometheusSpec:
    externalUrl: "https://monitoring-prometheus.{{ .StateValues.ingress_hostname }}:{{ .StateValues.ingress_port }}/"
    routePrefix: /

    serviceMonitorSelector: {}
    serviceMonitorSelectorNilUsesHelmValues: false
    probeSelector: {}
    probeSelectorNilUsesHelmValues: false
    replicas: 1
    retention: 5d
