#
# IMPORTANT NOTE
#
# This chart inherits from our common library chart. You can check the default values/options here:
# https://github.com/bjw-s-labs/helm-charts/blob/main/charts/library/common/values.yaml

configMaps:
  nginx-config:
    enabled: true
    data:
      nginx.conf: |
        events {}

        http {
          server {
            listen 80;

            location / {
              root /usr/share/nginx/html;
              index index.html;
            }
          }
        }

      index.html: |
        <!DOCTYPE html>
        <html>
          <head>
            <title>Kopia Servers</title>
            <style>
              @import url('https://fonts.googleapis.com/css?family=Roboto:400,500&display=swap');
              body {
                font-family: 'Roboto', Arial, sans-serif;
                background: #222222;
                color: #e0e0e0;
                margin: 0;
                padding: 0;
              }
              .container {
                max-width: 600px;
                margin: 60px auto;
                background: #2c2c2c;
                border-radius: 8px;
                box-shadow: 0 2px 8px rgba(0,0,0,0.2);
                padding: 32px 40px 24px 40px;
              }
              h1 {
                color: #fff;
                font-size: 2rem;
                font-weight: 500;
                margin-bottom: 24px;
                letter-spacing: 0.5px;
                text-align: center;
              }
              .server-list {
                list-style: none;
                padding: 0;
                margin: 0;
              }
              .server-list li {
                margin: 16px 0;
                text-align: center;
              }
              .server-link {
                display: inline-block;
                background: #1162b1;
                color: #fff;
                text-decoration: none;
                padding: 12px 32px;
                border-radius: 4px;
                font-size: 1.1rem;
                font-weight: 500;
                transition: background 0.2s, box-shadow 0.2s;
                box-shadow: 0 1px 4px rgba(0,0,0,0.08);
              }
              .server-link:hover {
                filter: brightness(80%)
              }
            </style>
          </head>
          <body>
            <div class="container">
              <h1>Index of Kopia Servers by namespace</h1>
              <ul class="server-list">
                {{- range $index, $ns := .Values.kopia_backup_namespaces }}
                <li>
                  <a class="server-link" href="https://automation-kopia-server-{{ $ns }}.{{ $.StateValues.ingress_hostname }}/" target="_blank" rel="noopener noreferrer">server-{{ $ns }}</a>
                </li>
                {{- end }}
              </ul>
            </div>
          </body>
        </html>

controllers:
  nginx:
    strategy: RollingUpdate
    annotations:
      reloader.stakater.com/auto: "true"
    serviceAccount:
      identifier: default
    containers:
      main:
        image:
          repository: nginx
          tag: stable
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
          limits:
            memory: 300Mi
            cpu: 300m
        probes:
          liveness:
            enabled: true
          readiness:
            enabled: true
          startup:
            enabled: true
            spec:
              failureThreshold: 30
              periodSeconds: 5
    
  #{{- range $index, $ns := .Values.kopia_backup_namespaces }}
  server-{{ $ns }}:
    replicas: 1
    strategy: RollingUpdate
    annotations:
      reloader.stakater.com/auto: "true"
    serviceAccount:
      identifier: default
    containers:
      main:
        image:
          repository: kopia/kopia
          tag: '{{ range $key,$value := $.StateValues.container_image_version }}{{ if (eq $key "kopia/kopia") }}{{ $value }}{{ end }}{{ end }}'
        env:
          AWS_ACCESS_KEY_ID:
            secretKeyRef:
              name: backup-kopia-auth
              key: AWS_ACCESS_KEY_ID
          AWS_SECRET_ACCESS_KEY:
            secretKeyRef:
              name: backup-kopia-auth
              key: AWS_SECRET_ACCESS_KEY
          AWS_ENDPOINTS:
            value: "{{ $.Values.backup_s3_endpoint }}"
          AWS_S3_BUCKET:
            value: "{{ $.Values.backup_s3_bucket }}"
          REPOSITORY_PASSWORD:
            secretKeyRef:
              name: backup-kopia-auth
              key: REPOSITORY_PASSWORD
        resources:
          requests:
            memory: 100Mi
            cpu: 100m
          limits:
            memory: 300Mi
            cpu: 300m
        command:
          - /usr/bin/env
          - bash
          - "-c"
          - |
            sleep 10 && kopia server start \
              --log-level=debug \
              --address="http://0.0.0.0:51515" \
              --insecure \
              --without-password \
              --password=$REPOSITORY_PASSWORD \
              --ui-title-prefix "{{ $ns }}"
        probes:
          liveness:
            enabled: true
            spec:
              exec:
                command:
                  - /usr/bin/env
                  - bash
                  - -c
                  - curl --fail localhost:51515
              failureThreshold: 5
              initialDelaySeconds: 60
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 10
          readiness:
            enabled: true
          startup:
            enabled: true
            spec:
              failureThreshold: 30
              periodSeconds: 5
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/bin/env
                - bash
                - "-c"
                - |
                  kopia repository connect s3 \
                    --log-level=debug \
                    --endpoint=$AWS_ENDPOINTS \
                    --bucket=$AWS_S3_BUCKET --prefix=kopia/{{ $ns }}/ \
                    --access-key=$AWS_ACCESS_KEY_ID \
                    --secret-access-key=$AWS_SECRET_ACCESS_KEY \
                    --password=$REPOSITORY_PASSWORD || true
    #{{- end }}
    
persistence:
  nginx-config:
    type: configMap
    identifier: nginx-config
    globalMounts:
      - path:  /etc/nginx/nginx.conf
        subPath: nginx.conf
        readOnly: true
      - path: /usr/share/nginx/html/index.html
        subPath: index.html
        readOnly: true

serviceAccount:
  default:
    enabled: true

service:
  nginx:
    controller: "nginx"
    ports:
      http:
        port: 80
  #{{- range $index, $ns := .Values.kopia_backup_namespaces }}
  server-{{ $ns }}:
    controller: "server-{{ $ns }}"
    ports:
      http:
        port: 51515
  #{{- end }}


ingress:
  nginx:
    enabled: true

    annotations:
      #{{- if .Values.security_enabled }}{{ .Values.security_oauth2_annotations | toYaml | replace "SOME_REGEX_TO_SKIP" "(?!auth(?!\\/token)).*" | nindent 6 }}{{ end }}

      gethomepage.dev/enabled: "true"
      gethomepage.dev/name: "Kopia"
      gethomepage.dev/pod-selector: "app.kubernetes.io/instance={{ .Values.release_name }}-automation-kopia"
      gethomepage.dev/description: "Cross-platform backup tool for Windows, macOS & Linux."
      gethomepage.dev/group: "Automation"
      gethomepage.dev/icon: "sh-kopia"

    className: "nginx"

    hosts:
      - host: "automation-kopia.{{ .StateValues.ingress_hostname }}"
        paths:
          - path: /
            pathType: Prefix
            service:
              name: "{{ .Values.release_name }}-automation-kopia-nginx"
              port: 80
  #{{- range $index, $ns := .Values.kopia_backup_namespaces }}
  server-{{ $ns }}:
    enabled: true

    annotations:
      #{{- if $.Values.security_enabled }}{{ $.Values.security_oauth2_annotations | toYaml | replace "SOME_REGEX_TO_SKIP" "(?!auth(?!\\/token)).*" | nindent 6 }}{{ end }}

    className: "nginx"

    hosts:
      - host: "automation-kopia-server-{{ $ns }}.{{ $.StateValues.ingress_hostname }}"
        paths:
          - path: /
            pathType: Prefix
            service:
              name: "{{ $.Values.release_name }}-automation-kopia-server-{{ $ns }}"
              port: 51515
  #{{- end }}