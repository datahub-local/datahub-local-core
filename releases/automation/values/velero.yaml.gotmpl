# https://github.com/vmware-tanzu/helm-charts/blob/main/charts/velero/values.yaml

s3-configuration: &s3-configuration
  name: velero-s3-backup
  provider: aws
  bucket: datahub-local-test
  default: true
  credential:
    name: backup-velero-auth
    key: s3_credentials
  config:
    region: minio
    s3ForcePathStyle: true
    s3Url: http://{{ .Values.release_name }}-data-minio.data.svc.cluster.local:9000

configuration:
  backupStorageLocation:
    - *s3-configuration
  volumeSnapshotLocation:
    - *s3-configuration
  features: EnableCSI

deployNodeAgent: true
nodeAgent:
  tolerations:
    - key: nvidia.com/gpu
      operator: Exists
      effect: NoSchedule

initContainers:
  - name: velero-plugin-for-aws
    image: velero/velero-plugin-for-aws:{{ range $key,$value := .StateValues.container_image_version }}{{ if (eq $key "velero/velero-plugin-for-aws") }}{{ $value }}{{ end }}{{ end }}
    volumeMounts:
      - mountPath: /target
        name: plugins

metrics:
  enabled: true

  serviceMonitor:
    enabled: true
    autodetect: false
    namespace: {{.Release.Namespace}}

  nodeAgentPodMonitor:
    enabled: true
    autodetect: false
    namespace: {{.Release.Namespace}}

  prometheusRule:
    enabled: true
    autodetect: false
    namespace: {{.Release.Namespace}}

    spec:
      - alert: VeleroBackupPartialFailures
        annotations:
          message: "Velero backup {{`{{ $labels.schedule }}`}} has {{`{{ $value | humanizePercentage }}`}} partialy failed backups."
        expr: |-
          velero_backup_partial_failure_total{schedule!=""} / velero_backup_attempt_total{schedule!=""} > 0.25
        for: 15m
        labels:
          severity: warning
      - alert: VeleroBackupFailures
        annotations:
          message: "Velero backup {{`{{ $labels.schedule }}`}} has {{`{{ $value | humanizePercentage }}`}} failed backups."
        expr: |-
          velero_backup_failure_total{schedule!=""} / velero_backup_attempt_total{schedule!=""} > 0.25
        for: 15m
        labels:
          severity: warning

schedules:
  automation-home-assistant:
    schedule: "0 0 * * *"
    useOwnerReferencesInBackup: false
    paused: false
    template:
      ttl: "240h"
      storageLocation: velero-s3-backup
      volumeSnapshotLocations: velero-s3-backup
      snapshotVolumes: true
      includedNamespaces:
        - automation
      includedResources:
        - persistentVolumeClaims
  data-postgres:
    schedule: "0 0 * * *"
    useOwnerReferencesInBackup: false
    template:
      ttl: "240h"
      storageLocation: velero-s3-backup
      volumeSnapshotLocations: velero-s3-backup
      snapshotVolumes: false
      defaultVolumesToFsBackup: true
      defaultVolumesToRestic: true
      includedNamespaces:
        - data
      labelSelector:
        matchLabels:
          app.kubernetes.io/name: postgresql

extraObjects:
  - apiVersion: snapshot.storage.k8s.io/v1
    kind: VolumeSnapshotClass
    metadata:
      name: longhorn-snapshot-vsc
      labels:
        velero.io/csi-volumesnapshot-class: "true"
    driver: driver.longhorn.io
    deletionPolicy: Delete
    parameters:
      type: bak
  - apiVersion: longhorn.io/v1beta2
    kind: Setting
    metadata:
      name: backup-target
      namespace: kube-system
    value: s3://datahub-local-test@minio/backups/longhorn
  - apiVersion: longhorn.io/v1beta2
    kind: Setting
    metadata:
      name: backup-target-credential-secret
      namespace: kube-system
    value: backup-longhorn-auth
