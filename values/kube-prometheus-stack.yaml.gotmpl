# Values for kube-prometheus-stack chart. See https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml

prometheusOperator:
  admissionWebhooks:
    enabled: false

alertmanager:
  ingress:
    enabled: true
    ingressClassName: "traefik"
    hosts:
      - "{{ .StateValues.ingress_hostname }}"
    paths:
      - /monitoring/alertmanager
    secureBackends: true
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      traefik.ingress.kubernetes.io/router.middlewares: "monitoring-monitoring-alertmanager@kubernetescrd{{ if .Values.traeffik.auth_enabled }},oauth2-proxy-traefik-auth@kubernetescrd{{ end }}"

      gethomepage.dev/enabled: "true"
      gethomepage.dev/name: "Alertmanager"
      gethomepage.dev/description: "The Alertmanager handles alerts sent by client applications such as the Prometheus server."
      gethomepage.dev/group: "Monitoring"
      gethomepage.dev/icon: "alertmanager.png"
      gethomepage.dev/pod-selector: "app.kubernetes.io/name=alertmanager"

grafana:
  persistence:
    enabled: true
  grafana.ini:
    server:
      domain: "{{ .StateValues.ingress_hostname }}"
      root_url: "https://{{ .StateValues.ingress_hostname }}:{{ .StateValues.ingress_port }}/monitoring/grafana"
      serve_from_sub_path: true
    auth:
      disable_login_form: true
      disable_signout_menu: true
    auth.anonymous:
      enabled: true
      org_role: Admin
    auth.basic:
      enabled: false
  ingress:
    enabled: true
    ingressClassName: "traefik"
    hosts:
      - "{{ .StateValues.ingress_hostname }}"
    path: /monitoring/grafana
    secureBackends: true
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      traefik.ingress.kubernetes.io/router.middlewares: "{{ if .Values.traeffik.auth_enabled }}oauth2-proxy-traefik-auth@kubernetescrd{{ end }}"

      gethomepage.dev/enabled: "true"
      gethomepage.dev/name: "Grafana"
      gethomepage.dev/description: "The open and composable observability and data visualization platform."
      gethomepage.dev/group: "Monitoring"
      gethomepage.dev/icon: "grafana.png"
      gethomepage.dev/pod-selector: "app.kubernetes.io/name=grafana"

prometheus:
  ingress:
    enabled: true
    ingressClassName: "traefik"
    hosts:
      - "{{ .StateValues.ingress_hostname }}"
    paths:
      - /monitoring/prometheus
    secureBackends: true
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      traefik.ingress.kubernetes.io/router.middlewares: "{{ if .Values.traeffik.auth_enabled }}oauth2-proxy-traefik-auth@kubernetescrd{{ end }}"

      gethomepage.dev/enabled: "true"
      gethomepage.dev/name: "Prometheus"
      gethomepage.dev/description: "The Prometheus monitoring system and time series database."
      gethomepage.dev/group: "Monitoring"
      gethomepage.dev/icon: "prometheus.png"
      gethomepage.dev/pod-selector: "app.kubernetes.io/name=prometheus"
  prometheusSpec:
    externalUrl: "https://{{ .StateValues.ingress_hostname }}:{{ .StateValues.ingress_port }}/monitoring/prometheus"
    routePrefix: /monitoring/prometheus
